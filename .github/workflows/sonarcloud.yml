name: SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    
  # Allow manual triggering
  workflow_dispatch:

jobs:
  analyze:
    runs-on: ubuntu-latest
    name: SonarCloud Code Quality Analysis
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required to retrieve the history for proper analysis

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: |
          echo "üß™ Running tests with coverage for SonarCloud..."
          npm run test:coverage
          
      - name: Run ESLint for SonarCloud
        run: |
          echo "üîç Running ESLint with JSON output for SonarCloud..."
          npx eslint . --format json --output-file eslint-report.json || true

      - name: Run SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "üìä Running SonarCloud analysis..."
          npm install -g sonarqube-scanner
          sonar-scanner \
            -Dsonar.projectKey=iwishBag \
            -Dsonar.organization=your-sonarcloud-organization \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.sources=src \
            -Dsonar.tests=src \
            -Dsonar.exclusions=node_modules/**,dist/**,coverage/**,src/main.tsx,src/vite-env.d.ts \
            -Dsonar.test.inclusions=**/*.test.ts,**/*.test.tsx \
            -Dsonar.typescript.lcov.reportPaths=coverage/lcov.info \
            -Dsonar.eslint.reportPaths=eslint-report.json \
            -Dsonar.coverage.exclusions=**/*.test.ts,**/*.test.tsx,src/main.tsx,src/vite-env.d.ts \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
            -Dsonar.testExecutionReportPaths=coverage/sonar-report.xml

      - name: Upload coverage reports as artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: sonarcloud-analysis-results
          path: |
            coverage/
            eslint-report.json
          retention-days: 30

      - name: Success Notification
        if: success()
        run: |
          echo "‚úÖ SonarCloud analysis completed successfully!"
          echo "üìä Code quality metrics have been uploaded to SonarCloud"
          echo "üîç Check the SonarCloud dashboard for detailed analysis"

      - name: Failure Notification
        if: failure()
        run: |
          echo "‚ùå SonarCloud analysis failed!"
          echo "üîß Please check the logs and fix any issues"
          echo "üí° Ensure SONAR_TOKEN is properly configured in GitHub secrets"