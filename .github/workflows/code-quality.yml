name: Code Quality Checks

on:
  # Run on every push to any branch
  push:
    branches: [ "*" ]
  
  # Run on every pull request
  pull_request:
    branches: [ main ]
  
  # Allow manual triggering from GitHub UI
  workflow_dispatch:

jobs:
  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality & Type Safety
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Setup Python for Semgrep
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install Dependencies
        run: |
          npm ci
          pip install semgrep
        
      - name: Run Unit & Integration Tests
        run: |
          echo "🧪 Running Vitest test suite..."
          npm test -- --run || {
            echo "❌ Tests failed. Please fix the failing tests before merging."
            exit 1
          }
          
      - name: Run Audit-CI
        run: |
          echo "🔍 Running Audit-CI for dependency vulnerabilities..."
          npx audit-ci --config .audit-ci.jsonc || {
            echo "❌ Audit-CI found critical or high severity vulnerabilities. Please fix them."
            exit 1
          }
          
      - name: Run Semgrep SAST
        run: |
          echo "🔍 Running Semgrep for static application security testing..."
          semgrep --config=auto --config=.semgrep.yml --error --json --output=semgrep-results.json . || {
            echo "❌ Semgrep found critical security issues. Please review semgrep-results.json"
            exit 1
          }
          
      - name: Run Linting
        run: |
          echo "🔍 Running ESLint..."
          npx eslint . --report-unused-disable-directives --max-warnings 1200 || {
            echo "⚠️  ESLint found critical issues. Please fix them to maintain code quality."
            echo "📝 Run 'npm run lint:fix' to auto-fix some issues"
            exit 1
          }
          
      - name: Run Type Checking
        run: |
          echo "🔍 Running TypeScript type checking..."
          npm run typecheck
          
      - name: Build Project
        run: npm run build
        
      - name: Run BundleWatch
        run: |
          echo "🔍 Running BundleWatch for bundle size analysis..."
          npm run bundlewatch || {
            echo "❌ Bundle size exceeds limits. Please optimize."
            exit 1
          }
          
      - name: Success Notification
        if: success()
        run: |
          echo "✅ All code quality checks passed!"
          echo "📊 ESLint: No linting errors found"
          echo "🔧 TypeScript: No type errors found"
          echo "📦 BundleWatch: Bundle size within limits"
          
      - name: Failure Notification
        if: failure()
        run: |
          echo "❌ Code quality checks failed!"
          echo "🔧 Please fix the errors and push again"
          exit 1