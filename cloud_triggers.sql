                                                                                                                         trigger_definition                                                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 CREATE TRIGGER trigger_update_authenticated_checkout_sessions_updated_at BEFORE UPDATE ON public.authenticated_checkout_sessions FOR EACH ROW EXECUTE FUNCTION update_authenticated_checkout_sessions_updated_at()
 CREATE TRIGGER update_chart_of_accounts_updated_at BEFORE UPDATE ON public.chart_of_accounts FOR EACH ROW EXECUTE FUNCTION update_updated_at_column()
 CREATE TRIGGER trigger_country_payment_preferences_updated_at BEFORE UPDATE ON public.country_payment_preferences FOR EACH ROW EXECUTE FUNCTION update_country_payment_preferences_updated_at()
 CREATE TRIGGER update_credit_notes_updated_at BEFORE UPDATE ON public.credit_notes FOR EACH ROW EXECUTE FUNCTION update_updated_at_column()
 CREATE TRIGGER update_financial_transactions_updated_at BEFORE UPDATE ON public.financial_transactions FOR EACH ROW EXECUTE FUNCTION update_updated_at_column()
 CREATE TRIGGER update_gateway_refunds_updated_at BEFORE UPDATE ON public.gateway_refunds FOR EACH ROW EXECUTE FUNCTION update_updated_at_column()
 CREATE TRIGGER trigger_update_guest_checkout_sessions_updated_at BEFORE UPDATE ON public.guest_checkout_sessions FOR EACH ROW EXECUTE FUNCTION update_guest_checkout_sessions_updated_at()
 CREATE TRIGGER update_payment_adjustments_updated_at BEFORE UPDATE ON public.payment_adjustments FOR EACH ROW EXECUTE FUNCTION update_updated_at_column()
 CREATE TRIGGER sync_payment_amounts_trigger AFTER INSERT OR DELETE OR UPDATE ON public.payment_ledger FOR EACH ROW EXECUTE FUNCTION sync_quote_payment_amounts()
 CREATE TRIGGER update_payment_ledger_updated_at BEFORE UPDATE ON public.payment_ledger FOR EACH ROW EXECUTE FUNCTION update_updated_at_column()
 CREATE TRIGGER update_payment_links_updated_at_trigger BEFORE UPDATE ON public.payment_links FOR EACH ROW EXECUTE FUNCTION update_payment_links_updated_at()
 CREATE TRIGGER update_payment_reconciliation_updated_at BEFORE UPDATE ON public.payment_reconciliation FOR EACH ROW EXECUTE FUNCTION update_updated_at_column()
 CREATE TRIGGER create_payment_ledger_entry_on_payment AFTER INSERT OR UPDATE ON public.payment_transactions FOR EACH ROW EXECUTE FUNCTION create_payment_ledger_entry_trigger()
 CREATE TRIGGER trigger_paypal_refunds_updated_at BEFORE UPDATE ON public.paypal_refunds FOR EACH ROW EXECUTE FUNCTION update_paypal_refunds_updated_at()
 CREATE TRIGGER trigger_update_payment_refund_totals AFTER INSERT OR UPDATE OF status, refund_amount, completed_at ON public.paypal_refunds FOR EACH ROW EXECUTE FUNCTION update_payment_refund_totals()
 CREATE TRIGGER trigger_paypal_webhook_events_updated_at BEFORE UPDATE ON public.paypal_webhook_events FOR EACH ROW EXECUTE FUNCTION trigger_paypal_webhook_events_updated_at()
 CREATE TRIGGER update_profiles_updated_at BEFORE UPDATE ON public.profiles FOR EACH ROW EXECUTE FUNCTION update_updated_at_column()
 CREATE TRIGGER trigger_update_quote_documents_updated_at BEFORE UPDATE ON public.quote_documents FOR EACH ROW EXECUTE FUNCTION update_quote_documents_updated_at()
 CREATE TRIGGER generate_quote_display_id BEFORE INSERT ON public.quotes FOR EACH ROW EXECUTE FUNCTION generate_display_id()
 CREATE TRIGGER set_share_token_trigger BEFORE INSERT ON public.quotes FOR EACH ROW EXECUTE FUNCTION set_share_token()
 CREATE TRIGGER trigger_log_address_change_insert AFTER INSERT ON public.quotes FOR EACH ROW WHEN ((new.shipping_address IS NOT NULL)) EXECUTE FUNCTION log_address_change()
 CREATE TRIGGER trigger_log_address_change_update AFTER UPDATE ON public.quotes FOR EACH ROW WHEN (((old.shipping_address IS DISTINCT FROM new.shipping_address) OR (old.address_locked IS DISTINCT FROM new.address_locked))) EXECUTE FUNCTION log_address_change()
 CREATE TRIGGER trigger_log_quote_status_change AFTER UPDATE ON public.quotes FOR EACH ROW EXECUTE FUNCTION log_quote_status_change()
 CREATE TRIGGER trigger_set_quote_expiration BEFORE UPDATE ON public.quotes FOR EACH ROW EXECUTE FUNCTION set_quote_expiration()
 CREATE TRIGGER update_payment_status_on_quote BEFORE UPDATE ON public.quotes FOR EACH ROW EXECUTE FUNCTION update_payment_status()
 CREATE TRIGGER update_quotes_updated_at BEFORE UPDATE ON public.quotes FOR EACH ROW EXECUTE FUNCTION update_updated_at_column()
 CREATE TRIGGER update_reconciliation_items_updated_at BEFORE UPDATE ON public.reconciliation_items FOR EACH ROW EXECUTE FUNCTION update_updated_at_column()
 CREATE TRIGGER update_refund_items_updated_at BEFORE UPDATE ON public.refund_items FOR EACH ROW EXECUTE FUNCTION update_updated_at_column()
 CREATE TRIGGER update_refund_requests_updated_at BEFORE UPDATE ON public.refund_requests FOR EACH ROW EXECUTE FUNCTION update_updated_at_column()
 CREATE TRIGGER trigger_update_route_customs_tiers_updated_at BEFORE UPDATE ON public.route_customs_tiers FOR EACH ROW EXECUTE FUNCTION update_route_customs_tiers_updated_at()
 CREATE TRIGGER validate_delivery_options_trigger BEFORE INSERT OR UPDATE ON public.shipping_routes FOR EACH ROW EXECUTE FUNCTION validate_delivery_options()
 CREATE TRIGGER ensure_profile_before_address BEFORE INSERT ON public.user_addresses FOR EACH ROW EXECUTE FUNCTION before_address_insert()
 CREATE TRIGGER trigger_handle_default_address_insert BEFORE INSERT ON public.user_addresses FOR EACH ROW EXECUTE FUNCTION handle_default_address()
 CREATE TRIGGER trigger_handle_default_address_update BEFORE UPDATE ON public.user_addresses FOR EACH ROW EXECUTE FUNCTION handle_default_address()
(34 rows)

